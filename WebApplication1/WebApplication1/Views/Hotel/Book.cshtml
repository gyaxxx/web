@{
    ViewData["Title"] = "Booking";
    Layout = "~/Views/Shared/Main.cshtml";
}
@model GuestRoom_Booking

<style>
    .room {
        background-color: #3D2C8D;
        font-size: 20px;
        color: white;
        height: 900px;
    }

        .room h2 {
            padding-top: 50px;
        }

        .room input:not(:last-child) {
            margin-bottom: 30px;
        }

        .room button {
            float: right;
            background-color: #916BBF;
        }

    .fg {
        padding-bottom: 30px;
    }
</style>

<div class="room">
    <h2 class="text-center">Room Booking</h2>
    <div class="container" style="margin-top: 0px; padding: 10px;">
        <div asp-validation-summary="All" class="text-danger"></div>
        <form asp-controller="Hotel" asp-action="BookConfirmed" method="post">
            <div class="form-group fg">
                <div class="form-row">

                    <div class="col-3">
                        <label asp-for="guest.FirstName">First name:</label>
                        <input type="text" class="form-control" asp-for="guest.FirstName">
                        <span asp-validation-for="guest.FirstName" class="text-danger"></span>
                    </div>

                     <div class="col-3">
                        <label asp-for="guest.LastName">Last name:</label>
                        <input type="text" class="form-control" asp-for="guest.LastName">
                        <span asp-validation-for="guest.LastName" class="text-danger"></span>
                     </div>

                     <div class="col-3">
                        <label asp-for="guest.PhoneNumber">Phone number:</label>
                        <input type="text" class="form-control" asp-for="guest.PhoneNumber">
                        <span asp-validation-for="guest.PhoneNumber" class="text-danger"></span>
                     </div>

                     <div class="col-3">
                        <label asp-for="guest.Email">Email:</label>
                        <input type="text" class="form-control" asp-for="guest.Email">
                        <span asp-validation-for="guest.Email" class="text-danger"></span>
                     </div>
                </div>


               
        </form> <label asp-for="room.RoomTypeName" style="color: white;">Room Type: </label>
                <select class="form-control form-control-lg" id="roomTypeSelect" asp-for="room.RoomTypeName">
                    <span id="roomTypeFloor&Number"></span>
                    <option value="blank"> Choose room type ... </option>
                    <option value="Superior">Superior</option>
                    <option value="Senior Deluxe">Senior Deluxe</option>
                    <option value="Deluxe">Delux</option>
                    <option value="Family Room">Family Room</option>
                </select>
                <span asp-validation-for="room.RoomTypeName" class="text-danger"></span>

                <div class="form-row">
                    <div class="col-6">
                        <label asp-for="room.Floor">Floor:</label>
                        <select class="form-control form-control-lg" asp-for="room.Floor" id="floorOptions">
                        </select>
                        <span asp-validation-for="room.Floor" class="text-danger"></span>
                    </div>

                    <div class="col-6">
                        <label asp-for="room.RoomNumber">Room:</label>
                        <select class="form-control form-control-lg" asp-for="room.RoomNumber" id="room_numberOptions">
                        </select>
                        <span asp-validation-for="room.Floor" class="text-danger"></span>
                    </div>
                </div>

                <br>
                <div id="descriptionDiv" class="mb-3"></div>
                <div class="form-row">
                    <div class="col-6">
                        <label asp-for="reservations.CheckInDate">Book from:</label>
                        <input class="form-control" asp-for="reservations.CheckInDate">
                        <span asp-validation-for="reservations.CheckInDate" class="text-danger"></span>
                    </div>
                    
                    <div class="col-6">
                        <label asp-for="reservations.CheckOutDate">Book to:</label>
                        <input class="form-control" asp-for="reservations.CheckOutDate">
                        <span asp-validation-for="reservations.CheckOutDate" class="text-danger"></span>
                    </div>
                </div>
                <br>
                <button class="btn form-control">Book</button>
            </div>
    </div>
</div>

<script>
const roomTypeSelect = document.getElementById('roomTypeSelect');
const floorOptions = document.getElementById('floorOptions');
const room_numberOptions = document.getElementById('room_numberOptions');
const descriptionDiv = document.getElementById('descriptionDiv');

const descriptions = {
    "blank": "",
    "Superior": "Room description: <br> - Bed Type: 01 Double bed <br> - View: City view <br> - Area: 20m2 <br> - Price: 1.000.000 VND",
    "Deluxe": "Room description: <br> - Bed Type: 02 Double beds <br> - View: City view <br> - Area: 24m2 <br> - Price: 1.200.000 VND",
    "Senior Deluxe": "Room description: <br> - Bed Type: 02 Double beds <br> - View: City view <br> - Area: 32m2 <br> - Price: 1.400.000 VND",
    "Family Room": "Room description: <br> - Bed Type: 02 Double bed <br> - View: City view <br> - Area: 41m2 <br> - Price: 1.600.000 VND",
};

const Floor_Number = {
    'Superior': [
        { floor: '1', roomNumber: '101' },
        { floor: '1', roomNumber: '102' },
        { floor: '1', roomNumber: '103' },
        { floor: '1', roomNumber: '104' },
        { floor: '1', roomNumber: '105' },
        { floor: '2', roomNumber: '201' },
        { floor: '2', roomNumber: '202' },
        { floor: '2', roomNumber: '203' },
        { floor: '2', roomNumber: '204' },
        { floor: '2', roomNumber: '205' }
    ],
    'Deluxe': [
        { floor: '3', roomNumber: '301' },
        { floor: '3', roomNumber: '302' },
        { floor: '3', roomNumber: '304' },
        { floor: '3', roomNumber: '305' },
        { floor: '4', roomNumber: '401' },
        { floor: '4', roomNumber: '402' },
        { floor: '4', roomNumber: '403' },
        { floor: '4', roomNumber: '404' },
    ],
    'Senior Deluxe': [
        { floor: '5', roomNumber: '501' },
        { floor: '5', roomNumber: '502' },
        { floor: '5', roomNumber: '503' },
        { floor: '6', roomNumber: '601' },
        { floor: '6', roomNumber: '602' },
        { floor: '6', roomNumber: '603' }
    ],
    'Family Room': [
        { floor: '7', roomNumber: '701' },
        { floor: '7', roomNumber: '702' },
        { floor: '8', roomNumber: '801' },
        { floor: '8', roomNumber: '802' }
    ]
};   

roomTypeSelect.addEventListener('change', function () {
    const selectedOption = roomTypeSelect.options[roomTypeSelect.selectedIndex].value;
    populateFloorOptions(selectedOption);
    descriptionDiv.innerHTML = descriptions[selectedOption];

    const selectedFloor = floorOptions.options[floorOptions.selectedIndex].value;
    const selectedRoomType = roomTypeSelect.options[roomTypeSelect.selectedIndex].value
    populateRoomNumberOptions(selectedRoomType, selectedFloor);
});

function populateFloorOptions(selectedRoomType){

    const selectElemet = document.getElementById('roomTypeSelect');
    const floorSelect = document.getElementById('floorOptions');
    
    floorOptions.innerHTML = '';

    const combinations = Floor_Number[selectedRoomType];

    if(!combinations)
    {
        const option = document.createElement('option');
        option.value = '';
        option.text = '...';
        floorOptions.appendChild(option);
        room_numberOptions.appendChild(option);
    } else {
        const uniqueFloor = [];
        for (const combination of combinations) {
           if(!uniqueFloor.includes(combination.floor)) {
               uniqueFloor.push(combination.floor);
               const optionFloor = document.createElement('option');
               optionFloor.value = combination.floor;
               optionFloor.text = `Floor ${combination.floor}`;
               floorOptions.appendChild(optionFloor);
           }
        }
    }
}

floorOptions.addEventListener('change', function() {
    const selectedFloor = floorOptions.options[floorOptions.selectedIndex].value;
    const selectedRoomType = roomTypeSelect.options[roomTypeSelect.selectedIndex].value
    populateRoomNumberOptions(selectedRoomType, selectedFloor);
});

function populateRoomNumberOptions(selectedRoomType, selectedFloor) {
    room_numberOptions.innerHTML = '';

    const combinations = Floor_Number[selectedRoomType];
    const roomNumbersForFloor = combinations
        .filter((combination) => combination.floor === selectedFloor)
        .map((combination) => combination.roomNumber);

    for (const roomNumber of roomNumbersForFloor) {
        const optionNumber = document.createElement('option');
        optionNumber.value = roomNumber;
        optionNumber.text = `Room ${roomNumber}`;
        room_numberOptions.appendChild(optionNumber);
    }
}
</script>